# -*- coding: utf-8 -*-
"""CSGPF.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RiBGvU0_eZwNrMcfgLoHnOwKIIlLYBj-

## Group project members:
Mohammad Amjad, Jiayu Shao, Yingzhe Du, Bill Jie Lee
"""

from google.colab import files
import pandas as pd
import numpy as np
import glob
import os
import statsmodels.api as sm

# Load and combine CSV files
files2 = files.upload()
files2 = glob.glob("*.csv")

print("Resultant CSV after joining all CSV files at a particular location...")
df2 = pd.concat(map(pd.read_csv, files2), ignore_index=True)
print(df2.head())

# Check initial NaN values
print("Initial NaN values per column:")
print(df2.isnull().sum())

# Define columns for conversion to numeric
convcolns = [
    'Birth Cohort', 'education women potential wage',
    'psychology women potential wage', 'fine arts women potential wage', 'medical women potential wage',
    'languages women potential wage', 'engineering women potential wage', 'biology women potential wage',
    'physical sciences women potential wage', 'business women potential wage', 'history women potential wage',
    'Female-Male Mean Potential Ln Wage Occupation'
]

# Convert specified columns to numeric
for coln3 in convcolns:
    if coln3 in df2.columns:
        df2[coln3] = pd.to_numeric(df2[coln3], errors='coerce')

# Fill NaNs for numeric columns with mean
for col in df2.select_dtypes(include=[np.number]).columns:
    df2[col].fillna(df2[col].mean(), inplace=True)

# Fill NaNs for object columns with mode
for col in df2.select_dtypes(include=['object']).columns:
    if not df2[col].mode().empty:
        df2[col].fillna(df2[col].mode()[0], inplace=True)

# Check data types
print("Data types of columns:")
print(df2.dtypes)

# Ensure all columns are numeric
for col in df2.columns:
    df2[col] = pd.to_numeric(df2[col], errors='coerce')

# Remove any remaining non-numeric columns
df2 = df2.select_dtypes(include=[np.number])
print("Dimensions after ensuring all columns are numeric:", df2.shape)

# Check for Inf values and replace them with NaNs
df2.replace([np.inf, -np.inf], np.nan, inplace=True)

# Drop rows with NaNs in dependent variable only
df2 = df2.dropna(subset=['Female-Male Mean Potential Ln Wage Occupation'])
print("Dimensions after replacing Infs and dropping remaining NaNs in dependent variable:", df2.shape)

# Fill any remaining NaNs with column means
df2.fillna(df2.mean(), inplace=True)

# Check if there are any NaNs or Infs left in the independent variables
print("Checking for NaNs and Infs in the independent variables...")
print(df2.isnull().sum())

# Drop columns that still contain NaNs after preprocessing
df2 = df2.dropna(axis=1)
print("Dimensions after dropping columns with NaNs:", df2.shape)

# Ensure there is enough data to perform regression
if df2.empty:
    print("DataFrame is empty after preprocessing. Please check the data and preprocessing steps.")
else:
    # Define dependent and independent variables
    y = df2['Female-Male Mean Potential Ln Wage Occupation']
    X = df2.drop(columns=['Female-Male Mean Potential Ln Wage Occupation'])

    # Add constant to independent variables
    X = sm.add_constant(X)

    # Fit the regression model
    try:
        model1 = sm.OLS(y, X).fit()
        summary = model1.summary()
        print(summary)
    except Exception as e:
        print(f"Error fitting the model: {e}")

# Check final DataFrame dimensions
print("Final DataFrame dimensions:")
print(df2.shape)

"""## Sources:
1) https://www.geeksforgeeks.org/python-os-path-join-method/
2) https://www.tutorialspoint.com/how-to-merge-all-csv-files-into-a-single-dataframe-python-pandas
3) https://www.tutorialspoint.com/python/os_getcwd.htm
4) https://stackoverflow.com/questions/41681693/pandas-isnull-sum-with-column-headers
5) https://sentry.io/answers/change-a-column-type-in-a-dataframe-in-python-pandas/#:~:text=If%20we%20want%20to%20convert%20a%20column%20to%20a%20sensible,should%20use%20the%20convert_dtypes%20method.
6) https://pandas.pydata.org/docs/reference/api/pandas.to_numeric.html
7) https://www.geeksforgeeks.org/loop-or-iterate-over-all-or-certain-columns-of-a-dataframe-in-python-pandas/
8) https://stackoverflow.com/questions/24870306/how-to-check-if-a-column-exists-in-pandas
9) https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.dtypes.html
10) https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.select_dtypes.html
11) https://www.geeksforgeeks.org/how-to-fill-nan-values-with-mean-in-pandas/
12) https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.fillna.html
13) https://stackoverflow.com/questions/18689823/pandas-dataframe-replace-nan-values-with-average-of-columns
14) https://stackoverflow.com/questions/21271581/selecting-pandas-columns-by-dtype
15) https://stackoverflow.com/questions/36543606/python-pandas-check-if-dataframe-is-not-empty
16) https://www.statology.org/pandas-fillna-with-mode/
17) https://stackoverflow.com/questions/42789324/how-to-pandas-fillna-with-mode-of-column
18) https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.shape.html
19) https://www.geeksforgeeks.org/check-if-dataframe-contains-infinity-in-python-pandas/
20) https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.replace.html
21) https://stackoverflow.com/questions/66922511/replace-all-inf-inf-values-with-nan-in-a-pandas-dataframe
22) https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.dropna.html
23) https://www.geeksforgeeks.org/how-to-drop-rows-with-nan-values-in-pandas-dataframe/
24) https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.dropna.html
25) https://stackoverflow.com/questions/19828822/how-do-i-check-if-a-pandas-dataframe-is-empty
26) https://www.aporia.com/resources/how-to/check-if-dataframe-is-empty/#:~:text=We%20can%20use%20the%20empty,if%20the%20DataFrame%20is%20empty.
27) https://stackoverflow.com/questions/39337115/testing-if-a-pandas-dataframe-exists
28) https://www.statsmodels.org/dev/generated/statsmodels.regression.linear_model.OLS.html
29) https://www.datarobot.com/blog/ordinary-least-squares-in-python/
30) https://stackoverflow.com/questions/19991445/run-an-ols-regression-with-pandas-data-frame
31) https://docs.python.org/3/tutorial/errors.html
32) https://stackoverflow.com/questions/73139129/try-and-except-in-pandas-operations-how-to-do-it
33) https://www.geeksforgeeks.org/ordinary-least-squares-ols-using-statsmodels/
34) https://www.freecodecamp.org/news/python-print-exception-how-to-try-except-print-an-error/
35) https://stackoverflow.com/questions/1483429/how-do-i-print-an-exception-in-python
"""